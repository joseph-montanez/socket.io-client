{"version":3,"file":"socket.io.msgpack.min.js","sources":["../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/index.mjs","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/ms/index.js","../node_modules/debug/src/common.js","../node_modules/debug/src/browser.js","../build/esm/url.js","../node_modules/notepack.io/browser/encode.js","../node_modules/notepack.io/browser/decode.js","../node_modules/notepack.io/lib/index.js","../node_modules/component-emitter/index.js","../node_modules/socket.io-msgpack-parser/index.js","../build/esm/on.js","../build/esm/socket.js","../build/esm/contrib/backo2.js","../build/esm/manager.js","../build/esm/index.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\" && typeof this.offlineEventListener !== \"undefined\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","import { parse } from \"engine.io-client\";\nimport debugModule from \"debug\"; // debug()\nconst debug = debugModule(\"socket.io-client:url\"); // debug()\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            debug(\"protocol-less url %s\", uri);\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        debug(\"parse %s\", uri);\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","'use strict';\n\nfunction utf8Write(view, offset, str) {\n  var c = 0;\n  for (var i = 0, l = str.length; i < l; i++) {\n    c = str.charCodeAt(i);\n    if (c < 0x80) {\n      view.setUint8(offset++, c);\n    }\n    else if (c < 0x800) {\n      view.setUint8(offset++, 0xc0 | (c >> 6));\n      view.setUint8(offset++, 0x80 | (c & 0x3f));\n    }\n    else if (c < 0xd800 || c >= 0xe000) {\n      view.setUint8(offset++, 0xe0 | (c >> 12));\n      view.setUint8(offset++, 0x80 | (c >> 6) & 0x3f);\n      view.setUint8(offset++, 0x80 | (c & 0x3f));\n    }\n    else {\n      i++;\n      c = 0x10000 + (((c & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff));\n      view.setUint8(offset++, 0xf0 | (c >> 18));\n      view.setUint8(offset++, 0x80 | (c >> 12) & 0x3f);\n      view.setUint8(offset++, 0x80 | (c >> 6) & 0x3f);\n      view.setUint8(offset++, 0x80 | (c & 0x3f));\n    }\n  }\n}\n\nfunction utf8Length(str) {\n  var c = 0, length = 0;\n  for (var i = 0, l = str.length; i < l; i++) {\n    c = str.charCodeAt(i);\n    if (c < 0x80) {\n      length += 1;\n    }\n    else if (c < 0x800) {\n      length += 2;\n    }\n    else if (c < 0xd800 || c >= 0xe000) {\n      length += 3;\n    }\n    else {\n      i++;\n      length += 4;\n    }\n  }\n  return length;\n}\n\nfunction _encode(bytes, defers, value) {\n  var type = typeof value, i = 0, l = 0, hi = 0, lo = 0, length = 0, size = 0;\n\n  if (type === 'string') {\n    length = utf8Length(value);\n\n    // fixstr\n    if (length < 0x20) {\n      bytes.push(length | 0xa0);\n      size = 1;\n    }\n    // str 8\n    else if (length < 0x100) {\n      bytes.push(0xd9, length);\n      size = 2;\n    }\n    // str 16\n    else if (length < 0x10000) {\n      bytes.push(0xda, length >> 8, length);\n      size = 3;\n    }\n    // str 32\n    else if (length < 0x100000000) {\n      bytes.push(0xdb, length >> 24, length >> 16, length >> 8, length);\n      size = 5;\n    } else {\n      throw new Error('String too long');\n    }\n    defers.push({ _str: value, _length: length, _offset: bytes.length });\n    return size + length;\n  }\n  if (type === 'number') {\n    // TODO: encode to float 32?\n\n    // float 64\n    if (Math.floor(value) !== value || !isFinite(value)) {\n      bytes.push(0xcb);\n      defers.push({ _float: value, _length: 8, _offset: bytes.length });\n      return 9;\n    }\n\n    if (value >= 0) {\n      // positive fixnum\n      if (value < 0x80) {\n        bytes.push(value);\n        return 1;\n      }\n      // uint 8\n      if (value < 0x100) {\n        bytes.push(0xcc, value);\n        return 2;\n      }\n      // uint 16\n      if (value < 0x10000) {\n        bytes.push(0xcd, value >> 8, value);\n        return 3;\n      }\n      // uint 32\n      if (value < 0x100000000) {\n        bytes.push(0xce, value >> 24, value >> 16, value >> 8, value);\n        return 5;\n      }\n      // uint 64\n      hi = (value / Math.pow(2, 32)) >> 0;\n      lo = value >>> 0;\n      bytes.push(0xcf, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n      return 9;\n    } else {\n      // negative fixnum\n      if (value >= -0x20) {\n        bytes.push(value);\n        return 1;\n      }\n      // int 8\n      if (value >= -0x80) {\n        bytes.push(0xd0, value);\n        return 2;\n      }\n      // int 16\n      if (value >= -0x8000) {\n        bytes.push(0xd1, value >> 8, value);\n        return 3;\n      }\n      // int 32\n      if (value >= -0x80000000) {\n        bytes.push(0xd2, value >> 24, value >> 16, value >> 8, value);\n        return 5;\n      }\n      // int 64\n      hi = Math.floor(value / Math.pow(2, 32));\n      lo = value >>> 0;\n      bytes.push(0xd3, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n      return 9;\n    }\n  }\n  if (type === 'object') {\n    // nil\n    if (value === null) {\n      bytes.push(0xc0);\n      return 1;\n    }\n\n    if (Array.isArray(value)) {\n      length = value.length;\n\n      // fixarray\n      if (length < 0x10) {\n        bytes.push(length | 0x90);\n        size = 1;\n      }\n      // array 16\n      else if (length < 0x10000) {\n        bytes.push(0xdc, length >> 8, length);\n        size = 3;\n      }\n      // array 32\n      else if (length < 0x100000000) {\n        bytes.push(0xdd, length >> 24, length >> 16, length >> 8, length);\n        size = 5;\n      } else {\n        throw new Error('Array too large');\n      }\n      for (i = 0; i < length; i++) {\n        size += _encode(bytes, defers, value[i]);\n      }\n      return size;\n    }\n\n    // fixext 8 / Date\n    if (value instanceof Date) {\n      var time = value.getTime();\n      hi = Math.floor(time / Math.pow(2, 32));\n      lo = time >>> 0;\n      bytes.push(0xd7, 0, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n      return 10;\n    }\n\n    if (value instanceof ArrayBuffer) {\n      length = value.byteLength;\n\n      // bin 8\n      if (length < 0x100) {\n        bytes.push(0xc4, length);\n        size = 2;\n      } else\n      // bin 16\n      if (length < 0x10000) {\n        bytes.push(0xc5, length >> 8, length);\n        size = 3;\n      } else\n      // bin 32\n      if (length < 0x100000000) {\n        bytes.push(0xc6, length >> 24, length >> 16, length >> 8, length);\n        size = 5;\n      } else {\n        throw new Error('Buffer too large');\n      }\n      defers.push({ _bin: value, _length: length, _offset: bytes.length });\n      return size + length;\n    }\n\n    if (typeof value.toJSON === 'function') {\n      return _encode(bytes, defers, value.toJSON());\n    }\n\n    var keys = [], key = '';\n\n    var allKeys = Object.keys(value);\n    for (i = 0, l = allKeys.length; i < l; i++) {\n      key = allKeys[i];\n      if (typeof value[key] !== 'function') {\n        keys.push(key);\n      }\n    }\n    length = keys.length;\n\n    // fixmap\n    if (length < 0x10) {\n      bytes.push(length | 0x80);\n      size = 1;\n    }\n    // map 16\n    else if (length < 0x10000) {\n      bytes.push(0xde, length >> 8, length);\n      size = 3;\n    }\n    // map 32\n    else if (length < 0x100000000) {\n      bytes.push(0xdf, length >> 24, length >> 16, length >> 8, length);\n      size = 5;\n    } else {\n      throw new Error('Object too large');\n    }\n\n    for (i = 0; i < length; i++) {\n      key = keys[i];\n      size += _encode(bytes, defers, key);\n      size += _encode(bytes, defers, value[key]);\n    }\n    return size;\n  }\n  // false/true\n  if (type === 'boolean') {\n    bytes.push(value ? 0xc3 : 0xc2);\n    return 1;\n  }\n  // fixext 1 / undefined\n  if (type === 'undefined') {\n    bytes.push(0xd4, 0, 0);\n    return 3;\n  }\n  throw new Error('Could not encode');\n}\n\nfunction encode(value) {\n  var bytes = [];\n  var defers = [];\n  var size = _encode(bytes, defers, value);\n  var buf = new ArrayBuffer(size);\n  var view = new DataView(buf);\n\n  var deferIndex = 0;\n  var deferWritten = 0;\n  var nextOffset = -1;\n  if (defers.length > 0) {\n    nextOffset = defers[0]._offset;\n  }\n\n  var defer, deferLength = 0, offset = 0;\n  for (var i = 0, l = bytes.length; i < l; i++) {\n    view.setUint8(deferWritten + i, bytes[i]);\n    if (i + 1 !== nextOffset) { continue; }\n    defer = defers[deferIndex];\n    deferLength = defer._length;\n    offset = deferWritten + nextOffset;\n    if (defer._bin) {\n      var bin = new Uint8Array(defer._bin);\n      for (var j = 0; j < deferLength; j++) {\n        view.setUint8(offset + j, bin[j]);\n      }\n    } else if (defer._str) {\n      utf8Write(view, offset, defer._str);\n    } else if (defer._float !== undefined) {\n      view.setFloat64(offset, defer._float);\n    }\n    deferIndex++;\n    deferWritten += deferLength;\n    if (defers[deferIndex]) {\n      nextOffset = defers[deferIndex]._offset;\n    }\n  }\n  return buf;\n}\n\nmodule.exports = encode;\n","'use strict';\n\nfunction Decoder(buffer) {\n  this._offset = 0;\n  if (buffer instanceof ArrayBuffer) {\n    this._buffer = buffer;\n    this._view = new DataView(this._buffer);\n  } else if (ArrayBuffer.isView(buffer)) {\n    this._buffer = buffer.buffer;\n    this._view = new DataView(this._buffer, buffer.byteOffset, buffer.byteLength);\n  } else {\n    throw new Error('Invalid argument');\n  }\n}\n\nfunction utf8Read(view, offset, length) {\n  var string = '', chr = 0;\n  for (var i = offset, end = offset + length; i < end; i++) {\n    var byte = view.getUint8(i);\n    if ((byte & 0x80) === 0x00) {\n      string += String.fromCharCode(byte);\n      continue;\n    }\n    if ((byte & 0xe0) === 0xc0) {\n      string += String.fromCharCode(\n        ((byte & 0x1f) << 6) |\n        (view.getUint8(++i) & 0x3f)\n      );\n      continue;\n    }\n    if ((byte & 0xf0) === 0xe0) {\n      string += String.fromCharCode(\n        ((byte & 0x0f) << 12) |\n        ((view.getUint8(++i) & 0x3f) << 6) |\n        ((view.getUint8(++i) & 0x3f) << 0)\n      );\n      continue;\n    }\n    if ((byte & 0xf8) === 0xf0) {\n      chr = ((byte & 0x07) << 18) |\n        ((view.getUint8(++i) & 0x3f) << 12) |\n        ((view.getUint8(++i) & 0x3f) << 6) |\n        ((view.getUint8(++i) & 0x3f) << 0);\n      if (chr >= 0x010000) { // surrogate pair\n        chr -= 0x010000;\n        string += String.fromCharCode((chr >>> 10) + 0xD800, (chr & 0x3FF) + 0xDC00);\n      } else {\n        string += String.fromCharCode(chr);\n      }\n      continue;\n    }\n    throw new Error('Invalid byte ' + byte.toString(16));\n  }\n  return string;\n}\n\nDecoder.prototype._array = function (length) {\n  var value = new Array(length);\n  for (var i = 0; i < length; i++) {\n    value[i] = this._parse();\n  }\n  return value;\n};\n\nDecoder.prototype._map = function (length) {\n  var key = '', value = {};\n  for (var i = 0; i < length; i++) {\n    key = this._parse();\n    value[key] = this._parse();\n  }\n  return value;\n};\n\nDecoder.prototype._str = function (length) {\n  var value = utf8Read(this._view, this._offset, length);\n  this._offset += length;\n  return value;\n};\n\nDecoder.prototype._bin = function (length) {\n  var value = this._buffer.slice(this._offset, this._offset + length);\n  this._offset += length;\n  return value;\n};\n\nDecoder.prototype._parse = function () {\n  var prefix = this._view.getUint8(this._offset++);\n  var value, length = 0, type = 0, hi = 0, lo = 0;\n\n  if (prefix < 0xc0) {\n    // positive fixint\n    if (prefix < 0x80) {\n      return prefix;\n    }\n    // fixmap\n    if (prefix < 0x90) {\n      return this._map(prefix & 0x0f);\n    }\n    // fixarray\n    if (prefix < 0xa0) {\n      return this._array(prefix & 0x0f);\n    }\n    // fixstr\n    return this._str(prefix & 0x1f);\n  }\n\n  // negative fixint\n  if (prefix > 0xdf) {\n    return (0xff - prefix + 1) * -1;\n  }\n\n  switch (prefix) {\n    // nil\n    case 0xc0:\n      return null;\n    // false\n    case 0xc2:\n      return false;\n    // true\n    case 0xc3:\n      return true;\n\n    // bin\n    case 0xc4:\n      length = this._view.getUint8(this._offset);\n      this._offset += 1;\n      return this._bin(length);\n    case 0xc5:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._bin(length);\n    case 0xc6:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._bin(length);\n\n    // ext\n    case 0xc7:\n      length = this._view.getUint8(this._offset);\n      type = this._view.getInt8(this._offset + 1);\n      this._offset += 2;\n      return [type, this._bin(length)];\n    case 0xc8:\n      length = this._view.getUint16(this._offset);\n      type = this._view.getInt8(this._offset + 2);\n      this._offset += 3;\n      return [type, this._bin(length)];\n    case 0xc9:\n      length = this._view.getUint32(this._offset);\n      type = this._view.getInt8(this._offset + 4);\n      this._offset += 5;\n      return [type, this._bin(length)];\n\n    // float\n    case 0xca:\n      value = this._view.getFloat32(this._offset);\n      this._offset += 4;\n      return value;\n    case 0xcb:\n      value = this._view.getFloat64(this._offset);\n      this._offset += 8;\n      return value;\n\n    // uint\n    case 0xcc:\n      value = this._view.getUint8(this._offset);\n      this._offset += 1;\n      return value;\n    case 0xcd:\n      value = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return value;\n    case 0xce:\n      value = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return value;\n    case 0xcf:\n      hi = this._view.getUint32(this._offset) * Math.pow(2, 32);\n      lo = this._view.getUint32(this._offset + 4);\n      this._offset += 8;\n      return hi + lo;\n\n    // int\n    case 0xd0:\n      value = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return value;\n    case 0xd1:\n      value = this._view.getInt16(this._offset);\n      this._offset += 2;\n      return value;\n    case 0xd2:\n      value = this._view.getInt32(this._offset);\n      this._offset += 4;\n      return value;\n    case 0xd3:\n      hi = this._view.getInt32(this._offset) * Math.pow(2, 32);\n      lo = this._view.getUint32(this._offset + 4);\n      this._offset += 8;\n      return hi + lo;\n\n    // fixext\n    case 0xd4:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      if (type === 0x00) {\n        this._offset += 1;\n        return void 0;\n      }\n      return [type, this._bin(1)];\n    case 0xd5:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return [type, this._bin(2)];\n    case 0xd6:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return [type, this._bin(4)];\n    case 0xd7:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      if (type === 0x00) {\n        hi = this._view.getInt32(this._offset) * Math.pow(2, 32);\n        lo = this._view.getUint32(this._offset + 4);\n        this._offset += 8;\n        return new Date(hi + lo);\n      }\n      return [type, this._bin(8)];\n    case 0xd8:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return [type, this._bin(16)];\n\n    // str\n    case 0xd9:\n      length = this._view.getUint8(this._offset);\n      this._offset += 1;\n      return this._str(length);\n    case 0xda:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._str(length);\n    case 0xdb:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._str(length);\n\n    // array\n    case 0xdc:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._array(length);\n    case 0xdd:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._array(length);\n\n    // map\n    case 0xde:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._map(length);\n    case 0xdf:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._map(length);\n  }\n\n  throw new Error('Could not parse');\n};\n\nfunction decode(buffer) {\n  var decoder = new Decoder(buffer);\n  var value = decoder._parse();\n  if (decoder._offset !== buffer.byteLength) {\n    throw new Error((buffer.byteLength - decoder._offset) + ' trailing bytes');\n  }\n  return value;\n}\n\nmodule.exports = decode;\n","exports.encode = require('./encode');\nexports.decode = require('./decode');\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remove event specific arrays for event types that no\r\n  // one is subscribed for to avoid memory leak.\r\n  if (callbacks.length === 0) {\r\n    delete this._callbacks['$' + event];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  var args = new Array(arguments.length - 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","var msgpack = require(\"notepack.io\");\nvar Emitter = require(\"component-emitter\");\n\nexports.protocol = 5;\n\n/**\n * Packet types (see https://github.com/socketio/socket.io-protocol)\n */\n\nvar PacketType = (exports.PacketType = {\n  CONNECT: 0,\n  DISCONNECT: 1,\n  EVENT: 2,\n  ACK: 3,\n  CONNECT_ERROR: 4,\n});\n\nvar isInteger =\n  Number.isInteger ||\n  function (value) {\n    return (\n      typeof value === \"number\" &&\n      isFinite(value) &&\n      Math.floor(value) === value\n    );\n  };\n\nvar isString = function (value) {\n  return typeof value === \"string\";\n};\n\nvar isObject = function (value) {\n  return Object.prototype.toString.call(value) === \"[object Object]\";\n};\n\nfunction Encoder() {}\n\nEncoder.prototype.encode = function (packet) {\n  return [msgpack.encode(packet)];\n};\n\nfunction Decoder() {}\n\nEmitter(Decoder.prototype);\n\nDecoder.prototype.add = function (obj) {\n  var decoded = msgpack.decode(obj);\n  this.checkPacket(decoded);\n  this.emit(\"decoded\", decoded);\n};\n\nfunction isDataValid(decoded) {\n  switch (decoded.type) {\n    case PacketType.CONNECT:\n      return decoded.data === undefined || isObject(decoded.data);\n    case PacketType.DISCONNECT:\n      return decoded.data === undefined;\n    case PacketType.CONNECT_ERROR:\n      return isString(decoded.data) || isObject(decoded.data);\n    default:\n      return Array.isArray(decoded.data);\n  }\n}\n\nDecoder.prototype.checkPacket = function (decoded) {\n  var isTypeValid =\n    isInteger(decoded.type) &&\n    decoded.type >= PacketType.CONNECT &&\n    decoded.type <= PacketType.CONNECT_ERROR;\n  if (!isTypeValid) {\n    throw new Error(\"invalid packet type\");\n  }\n\n  if (!isString(decoded.nsp)) {\n    throw new Error(\"invalid namespace\");\n  }\n\n  if (!isDataValid(decoded)) {\n    throw new Error(\"invalid payload\");\n  }\n\n  var isAckValid = decoded.id === undefined || isInteger(decoded.id);\n  if (!isAckValid) {\n    throw new Error(\"invalid packet id\");\n  }\n};\n\nDecoder.prototype.destroy = function () {};\n\nexports.Encoder = Encoder;\nexports.Decoder = Decoder;\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nimport debugModule from \"debug\"; // debug()\nconst debug = debugModule(\"socket.io-client:socket\"); // debug()\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            // @ts-ignore\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            debug(\"emitting packet with ack id %d\", id);\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n            debug(\"discard packet as the transport is not currently writable\");\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    debug(\"removing packet with ack id %d from the buffer\", id);\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            debug(\"event with ack id %d has timed out after %d ms\", id, timeout);\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"transport is open - connecting\");\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        debug(\"close (%s)\", reason);\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        debug(\"emitting event %j\", args);\n        if (null != packet.id) {\n            debug(\"attaching ack callback to event\");\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            debug(\"sending ack %j\", args);\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            debug(\"calling ack %s with %j\", packet.id, packet.data);\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n            debug(\"bad ack %s\", packet.id);\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        debug(\"socket connected with id %s\", id);\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        debug(\"server disconnect (%s)\", this.nsp);\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            debug(\"performing disconnect (%s)\", this.nsp);\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * const handler = (event, ...args) => {\n     *   console.log(event);\n     * }\n     *\n     * socket.onAnyOutgoing(handler);\n     *\n     * // then later\n     * socket.offAnyOutgoing(handler);\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nimport debugModule from \"debug\"; // debug()\nconst debug = debugModule(\"socket.io-client:manager\"); // debug()\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        debug(\"readyState %s\", this._readyState);\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        debug(\"opening %s\", this.uri);\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            debug(\"error\");\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            debug(\"connect attempt will timeout after %d\", timeout);\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                debug(\"connect attempt timed out after %d\", timeout);\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            // @ts-ignore\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"open\");\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        debug(\"error\", err);\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                debug(\"socket %s is still active, skipping close\", nsp);\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        debug(\"writing packet %j\", packet);\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        debug(\"cleanup\");\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        debug(\"disconnect\");\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        debug(\"closed due to %s\", reason);\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            debug(\"reconnect failed\");\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            debug(\"will wait %dms before reconnect attempt\", delay);\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                debug(\"attempting reconnect\");\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        debug(\"reconnect attempt error\");\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        debug(\"reconnect success\");\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            // @ts-ignore\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\nimport debugModule from \"debug\"; // debug()\nconst debug = debugModule(\"socket.io-client\"); // debug()\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        debug(\"ignoring socket cache for %s\", source);\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            debug(\"new io instance for %s\", source);\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    // @ts-ignore\n    if (parsed.query && !opts.query) {\n        // @ts-ignore\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","encodePacket","supportsBinary","callback","obj","encodeBlobAsBase64","isView","buffer","fileReader","FileReader","onload","content","result","split","readAsDataURL","chars","lookup","Uint8Array","i","length","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","Emitter","mixin","on","addEventListener","event","fn","_callbacks","this","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","globalThis","clearTimeoutFn","prev","TransportError","reason","description","context","Error","Transport","writable","query","readyState","socket","doOpen","doClose","onClose","packets","write","packet","onPacket","details","alphabet","map","seed","encode","num","encoded","Math","floor","yeast","now","Date","str","encodeURIComponent","qs","qry","pairs","l","pair","decodeURIComponent","value","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Polling","polling","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","poll","onPause","pause","_this2","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","_this3","onOpen","close","_this4","count","encodePayload","_this5","doWrite","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","indexOf","path","Request","uri","req","request","method","xhrStatus","_this6","onError","onData","_this7","pollXhr","async","undefined","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","_this9","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","transports","websocket","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","substr","queryKey","$0","$1","$2","Socket","_this","writeBuffer","prevBufferLen","_extends","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","name","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","byteLength","size","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","s","h","d","w","y","ms","val","match","n","parseFloat","isFinite","msAbs","abs","plural","fmtLong","round","fmtShort","stringify","isPlural","common","env","createDebug","namespace","prevTime","namespacesCache","enabledCache","enableOverride","debug","enabled","curr","diff","coerce","unshift","format","formatter","formatters","formatArgs","logFn","log","useColors","color","selectColor","extend","destroy","defineProperty","enumerable","configurable","get","namespaces","set","v","init","delimiter","newDebug","toNamespace","regexp","stack","message","disable","skips","enable","save","RegExp","test","humanize","require$$0","console","warn","hash","colors","load","warned","exports","module","lastC","storage","setItem","removeItem","r","getItem","process","DEBUG","__nwjs","userAgent","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","localStorage","localstorage","debugModule","utf8Write","view","offset","setUint8","_encode","defers","hi","lo","_str","_length","_offset","pow","_float","isArray","time","getTime","_bin","toJSON","allKeys","encode_1","buf","DataView","deferIndex","deferWritten","nextOffset","defer","deferLength","bin","setFloat64","Decoder","_buffer","_view","byteOffset","_array","_parse","_map","string","chr","end","byte","getUint8","utf8Read","prefix","getUint16","getUint32","getInt8","getFloat32","getFloat64","getInt16","getInt32","decode_1","decoder","require$$1","msgpack","PacketType","PacketType_1","CONNECT","DISCONNECT","EVENT","ACK","CONNECT_ERROR","isInteger","isString","isObject","Encoder","add","checkPacket","nsp","isDataValid","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subs","onpacket","subEvents","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","notifyOutgoingListeners","timer","_packet","onconnect","BINARY_EVENT","onevent","BINARY_ACK","onack","ondisconnect","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","listener","_anyOutgoingListeners","Backoff","min","max","factor","jitter","attempts","duration","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","autoConnect","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","onping","ondata","ondecoded","active","_close","delay","onreconnect","attempt","cache","_typeof","parsed","loc","href","url","sameNamespace","forceNew","multiplex"],"mappings":"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"}